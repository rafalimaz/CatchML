system HealthCare{
	prop BPMLT40, BPMGT120, SystolicBloodPressGT80, DiastolicBloodPressLT100, hasHeartAttack, regionNotNotified, notifyNearDevices;
	prop regionHandledSuccessfully, neighborhoodCalled, askUrgentHelpToEmergency, emergencyGroupCalled;
	prop doctorCalled, doctorIsActive, askUrgentHelpToDoctor, callReserveDoctor;
	
	sit hasHeartAttack := or(or(BPMLT40, BPMGT120), SystolicBloodPressGT80, DiastolicBloodPressLT100);
	ex heartAttack := hasHeartAttack;

	scope nearDevices handle(heartAttack){		
		case (regionNotNotified) catch {
			do notifyNearDevices;			
		} signal (heartAttack) to emergencySupport;
	}
	
	scope neighborhood handle(heartAttack){		
		case (and(not(regionHandledSuccessfully), not(neighborhoodCalled))) catch {
			do notifyNearDevices;
		} signal(heartAttack) to emergencySupport;
	}
	
	scope emergencySupport handle(heartAttack){	
		case (not(emergencyGroupCalled)) catch {
			do and(askUrgentHelpToEmergency, emergencyGroupCalled);
		} raise(heartAttack);
	}
	
	scope device handle(heartAttack){
		case (and(not(doctorCalled),doctorIsActive)) catch {
			do and(askUrgentHelpToDoctor, doctorCalled);	
		}
		case (not(doctorIsActive)) catch {
			do callReserveDoctor;
		}
	}	
}
