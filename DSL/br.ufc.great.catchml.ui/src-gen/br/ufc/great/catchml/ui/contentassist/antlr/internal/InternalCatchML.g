/*
* generated by Xtext
*/
grammar InternalCatchML;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package br.ufc.great.catchml.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package br.ufc.great.catchml.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import br.ufc.great.catchml.services.CatchMLGrammarAccess;

}

@parser::members {
 
 	private CatchMLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(CatchMLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleDomainmodel
entryRuleDomainmodel 
:
{ before(grammarAccess.getDomainmodelRule()); }
	 ruleDomainmodel
{ after(grammarAccess.getDomainmodelRule()); } 
	 EOF 
;

// Rule Domainmodel
ruleDomainmodel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDomainmodelAccess().getElementsAssignment()); }
(rule__Domainmodel__ElementsAssignment)*
{ after(grammarAccess.getDomainmodelAccess().getElementsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbstractElement
entryRuleAbstractElement 
:
{ before(grammarAccess.getAbstractElementRule()); }
	 ruleAbstractElement
{ after(grammarAccess.getAbstractElementRule()); } 
	 EOF 
;

// Rule AbstractElement
ruleAbstractElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractElementAccess().getSystemDeclarationParserRuleCall()); }
	ruleSystemDeclaration
{ after(grammarAccess.getAbstractElementAccess().getSystemDeclarationParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleSystemDeclaration
entryRuleSystemDeclaration 
:
{ before(grammarAccess.getSystemDeclarationRule()); }
	 ruleSystemDeclaration
{ after(grammarAccess.getSystemDeclarationRule()); } 
	 EOF 
;

// Rule SystemDeclaration
ruleSystemDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSystemDeclarationAccess().getGroup()); }
(rule__SystemDeclaration__Group__0)
{ after(grammarAccess.getSystemDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclaration
entryRuleDeclaration 
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclarationAccess().getAlternatives()); }
(rule__Declaration__Alternatives)
{ after(grammarAccess.getDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropositionExpressionDeclaration
entryRulePropositionExpressionDeclaration 
:
{ before(grammarAccess.getPropositionExpressionDeclarationRule()); }
	 rulePropositionExpressionDeclaration
{ after(grammarAccess.getPropositionExpressionDeclarationRule()); } 
	 EOF 
;

// Rule PropositionExpressionDeclaration
rulePropositionExpressionDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropositionExpressionDeclarationAccess().getGroup()); }
(rule__PropositionExpressionDeclaration__Group__0)
{ after(grammarAccess.getPropositionExpressionDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropositionDeclaration
entryRulePropositionDeclaration 
:
{ before(grammarAccess.getPropositionDeclarationRule()); }
	 rulePropositionDeclaration
{ after(grammarAccess.getPropositionDeclarationRule()); } 
	 EOF 
;

// Rule PropositionDeclaration
rulePropositionDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropositionDeclarationAccess().getNameAssignment()); }
(rule__PropositionDeclaration__NameAssignment)
{ after(grammarAccess.getPropositionDeclarationAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSituationDeclaration
entryRuleSituationDeclaration 
:
{ before(grammarAccess.getSituationDeclarationRule()); }
	 ruleSituationDeclaration
{ after(grammarAccess.getSituationDeclarationRule()); } 
	 EOF 
;

// Rule SituationDeclaration
ruleSituationDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSituationDeclarationAccess().getGroup()); }
(rule__SituationDeclaration__Group__0)
{ after(grammarAccess.getSituationDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSemanticConstraintDeclaration
entryRuleSemanticConstraintDeclaration 
:
{ before(grammarAccess.getSemanticConstraintDeclarationRule()); }
	 ruleSemanticConstraintDeclaration
{ after(grammarAccess.getSemanticConstraintDeclarationRule()); } 
	 EOF 
;

// Rule SemanticConstraintDeclaration
ruleSemanticConstraintDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSemanticConstraintDeclarationAccess().getGroup()); }
(rule__SemanticConstraintDeclaration__Group__0)
{ after(grammarAccess.getSemanticConstraintDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransitionConstraintDeclaration
entryRuleTransitionConstraintDeclaration 
:
{ before(grammarAccess.getTransitionConstraintDeclarationRule()); }
	 ruleTransitionConstraintDeclaration
{ after(grammarAccess.getTransitionConstraintDeclarationRule()); } 
	 EOF 
;

// Rule TransitionConstraintDeclaration
ruleTransitionConstraintDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionConstraintDeclarationAccess().getGroup()); }
(rule__TransitionConstraintDeclaration__Group__0)
{ after(grammarAccess.getTransitionConstraintDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExceptionDeclaration
entryRuleExceptionDeclaration 
:
{ before(grammarAccess.getExceptionDeclarationRule()); }
	 ruleExceptionDeclaration
{ after(grammarAccess.getExceptionDeclarationRule()); } 
	 EOF 
;

// Rule ExceptionDeclaration
ruleExceptionDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExceptionDeclarationAccess().getGroup()); }
(rule__ExceptionDeclaration__Group__0)
{ after(grammarAccess.getExceptionDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleScopeDeclaration
entryRuleScopeDeclaration 
:
{ before(grammarAccess.getScopeDeclarationRule()); }
	 ruleScopeDeclaration
{ after(grammarAccess.getScopeDeclarationRule()); } 
	 EOF 
;

// Rule ScopeDeclaration
ruleScopeDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScopeDeclarationAccess().getGroup()); }
(rule__ScopeDeclaration__Group__0)
{ after(grammarAccess.getScopeDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHandlerDeclaration
entryRuleHandlerDeclaration 
:
{ before(grammarAccess.getHandlerDeclarationRule()); }
	 ruleHandlerDeclaration
{ after(grammarAccess.getHandlerDeclarationRule()); } 
	 EOF 
;

// Rule HandlerDeclaration
ruleHandlerDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHandlerDeclarationAccess().getGroup()); }
(rule__HandlerDeclaration__Group__0)
{ after(grammarAccess.getHandlerDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActionDeclaration
entryRuleActionDeclaration 
:
{ before(grammarAccess.getActionDeclarationRule()); }
	 ruleActionDeclaration
{ after(grammarAccess.getActionDeclarationRule()); } 
	 EOF 
;

// Rule ActionDeclaration
ruleActionDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionDeclarationAccess().getGroup()); }
(rule__ActionDeclaration__Group__0)
{ after(grammarAccess.getActionDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyDeclaration
entryRulePropertyDeclaration 
:
{ before(grammarAccess.getPropertyDeclarationRule()); }
	 rulePropertyDeclaration
{ after(grammarAccess.getPropertyDeclarationRule()); } 
	 EOF 
;

// Rule PropertyDeclaration
rulePropertyDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getGroup()); }
(rule__PropertyDeclaration__Group__0)
{ after(grammarAccess.getPropertyDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLogicExpression
entryRuleLogicExpression 
:
{ before(grammarAccess.getLogicExpressionRule()); }
	 ruleLogicExpression
{ after(grammarAccess.getLogicExpressionRule()); } 
	 EOF 
;

// Rule LogicExpression
ruleLogicExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogicExpressionAccess().getOrExpressionParserRuleCall()); }
	ruleOrExpression
{ after(grammarAccess.getLogicExpressionAccess().getOrExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrExpression
entryRuleOrExpression 
:
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
(rule__OrExpression__Group__0)
{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndExpression
entryRuleAndExpression 
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
(rule__AndExpression__Group__0)
{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression 
:
{ before(grammarAccess.getRelationalExpressionRule()); }
	 ruleRelationalExpression
{ after(grammarAccess.getRelationalExpressionRule()); } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup()); }
(rule__RelationalExpression__Group__0)
{ after(grammarAccess.getRelationalExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression 
:
{ before(grammarAccess.getAdditiveExpressionRule()); }
	 ruleAdditiveExpression
{ after(grammarAccess.getAdditiveExpressionRule()); } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getAlternatives()); }
(rule__AdditiveExpression__Alternatives)
{ after(grammarAccess.getAdditiveExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
(rule__PrimaryExpression__Alternatives)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTemporalLogicExpression
entryRuleTemporalLogicExpression 
:
{ before(grammarAccess.getTemporalLogicExpressionRule()); }
	 ruleTemporalLogicExpression
{ after(grammarAccess.getTemporalLogicExpressionRule()); } 
	 EOF 
;

// Rule TemporalLogicExpression
ruleTemporalLogicExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTemporalLogicExpressionAccess().getTemporalOrExpressionParserRuleCall()); }
	ruleTemporalOrExpression
{ after(grammarAccess.getTemporalLogicExpressionAccess().getTemporalOrExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTemporalOrExpression
entryRuleTemporalOrExpression 
:
{ before(grammarAccess.getTemporalOrExpressionRule()); }
	 ruleTemporalOrExpression
{ after(grammarAccess.getTemporalOrExpressionRule()); } 
	 EOF 
;

// Rule TemporalOrExpression
ruleTemporalOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTemporalOrExpressionAccess().getGroup()); }
(rule__TemporalOrExpression__Group__0)
{ after(grammarAccess.getTemporalOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTemporalAndExpression
entryRuleTemporalAndExpression 
:
{ before(grammarAccess.getTemporalAndExpressionRule()); }
	 ruleTemporalAndExpression
{ after(grammarAccess.getTemporalAndExpressionRule()); } 
	 EOF 
;

// Rule TemporalAndExpression
ruleTemporalAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTemporalAndExpressionAccess().getGroup()); }
(rule__TemporalAndExpression__Group__0)
{ after(grammarAccess.getTemporalAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTemporalRelationalExpression
entryRuleTemporalRelationalExpression 
:
{ before(grammarAccess.getTemporalRelationalExpressionRule()); }
	 ruleTemporalRelationalExpression
{ after(grammarAccess.getTemporalRelationalExpressionRule()); } 
	 EOF 
;

// Rule TemporalRelationalExpression
ruleTemporalRelationalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTemporalRelationalExpressionAccess().getGroup()); }
(rule__TemporalRelationalExpression__Group__0)
{ after(grammarAccess.getTemporalRelationalExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTemporalAdditiveExpression
entryRuleTemporalAdditiveExpression 
:
{ before(grammarAccess.getTemporalAdditiveExpressionRule()); }
	 ruleTemporalAdditiveExpression
{ after(grammarAccess.getTemporalAdditiveExpressionRule()); } 
	 EOF 
;

// Rule TemporalAdditiveExpression
ruleTemporalAdditiveExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTemporalAdditiveExpressionAccess().getAlternatives()); }
(rule__TemporalAdditiveExpression__Alternatives)
{ after(grammarAccess.getTemporalAdditiveExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTemporalPrimaryExpression
entryRuleTemporalPrimaryExpression 
:
{ before(grammarAccess.getTemporalPrimaryExpressionRule()); }
	 ruleTemporalPrimaryExpression
{ after(grammarAccess.getTemporalPrimaryExpressionRule()); } 
	 EOF 
;

// Rule TemporalPrimaryExpression
ruleTemporalPrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getAlternatives()); }
(rule__TemporalPrimaryExpression__Alternatives)
{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule MULTIPLEOPERATOR
ruleMULTIPLEOPERATOR
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMULTIPLEOPERATORAccess().getXorEnumLiteralDeclaration()); }
(	'xor' 
)
{ after(grammarAccess.getMULTIPLEOPERATORAccess().getXorEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule BINARYOPERATOR
ruleBINARYOPERATOR
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBINARYOPERATORAccess().getAlternatives()); }
(rule__BINARYOPERATOR__Alternatives)
{ after(grammarAccess.getBINARYOPERATORAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule TEMPORALOPERATOR
ruleTEMPORALOPERATOR
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTEMPORALOPERATORAccess().getAlternatives()); }
(rule__TEMPORALOPERATOR__Alternatives)
{ after(grammarAccess.getTEMPORALOPERATORAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule TEMPUNTILOPERATOR
ruleTEMPUNTILOPERATOR
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTEMPUNTILOPERATORAccess().getAlternatives()); }
(rule__TEMPUNTILOPERATOR__Alternatives)
{ after(grammarAccess.getTEMPUNTILOPERATORAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Declaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getPropositionExpressionDeclarationParserRuleCall_0()); }
	rulePropositionExpressionDeclaration
{ after(grammarAccess.getDeclarationAccess().getPropositionExpressionDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getSituationDeclarationParserRuleCall_1()); }
	ruleSituationDeclaration
{ after(grammarAccess.getDeclarationAccess().getSituationDeclarationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getSemanticConstraintDeclarationParserRuleCall_2()); }
	ruleSemanticConstraintDeclaration
{ after(grammarAccess.getDeclarationAccess().getSemanticConstraintDeclarationParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getTransitionConstraintDeclarationParserRuleCall_3()); }
	ruleTransitionConstraintDeclaration
{ after(grammarAccess.getDeclarationAccess().getTransitionConstraintDeclarationParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getExceptionDeclarationParserRuleCall_4()); }
	ruleExceptionDeclaration
{ after(grammarAccess.getDeclarationAccess().getExceptionDeclarationParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getScopeDeclarationParserRuleCall_5()); }
	ruleScopeDeclaration
{ after(grammarAccess.getDeclarationAccess().getScopeDeclarationParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getPropertyDeclarationParserRuleCall_6()); }
	rulePropertyDeclaration
{ after(grammarAccess.getDeclarationAccess().getPropertyDeclarationParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOpHyphenMinusGreaterThanSignKeyword_1_1_0_0()); }

	'->' 

{ after(grammarAccess.getRelationalExpressionAccess().getOpHyphenMinusGreaterThanSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getRelationalExpressionAccess().getOpLessThanSignHyphenMinusGreaterThanSignKeyword_1_1_0_1()); }

	'<->' 

{ after(grammarAccess.getRelationalExpressionAccess().getOpLessThanSignHyphenMinusGreaterThanSignKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_0()); }
(rule__AdditiveExpression__Group_0__0)
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAdditiveExpressionAccess().getPrimaryExpressionParserRuleCall_1()); }
	rulePrimaryExpression
{ after(grammarAccess.getAdditiveExpressionAccess().getPrimaryExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
(rule__PrimaryExpression__Group_0__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getValueAssignment_1()); }
(rule__PrimaryExpression__ValueAssignment_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getValueAssignment_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_2()); }
(rule__PrimaryExpression__Group_2__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_3()); }
(rule__PrimaryExpression__Group_3__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalRelationalExpression__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalRelationalExpressionAccess().getOpHyphenMinusGreaterThanSignKeyword_1_1_0_0()); }

	'->' 

{ after(grammarAccess.getTemporalRelationalExpressionAccess().getOpHyphenMinusGreaterThanSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getTemporalRelationalExpressionAccess().getOpLessThanSignHyphenMinusGreaterThanSignKeyword_1_1_0_1()); }

	'<->' 

{ after(grammarAccess.getTemporalRelationalExpressionAccess().getOpLessThanSignHyphenMinusGreaterThanSignKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalAdditiveExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalAdditiveExpressionAccess().getGroup_0()); }
(rule__TemporalAdditiveExpression__Group_0__0)
{ after(grammarAccess.getTemporalAdditiveExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTemporalAdditiveExpressionAccess().getTemporalPrimaryExpressionParserRuleCall_1()); }
	ruleTemporalPrimaryExpression
{ after(grammarAccess.getTemporalAdditiveExpressionAccess().getTemporalPrimaryExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getGroup_0()); }
(rule__TemporalPrimaryExpression__Group_0__0)
{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getValueAssignment_1()); }
(rule__TemporalPrimaryExpression__ValueAssignment_1)
{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getValueAssignment_1()); }
)

    |(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getGroup_2()); }
(rule__TemporalPrimaryExpression__Group_2__0)
{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getGroup_3()); }
(rule__TemporalPrimaryExpression__Group_3__0)
{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getGroup_4()); }
(rule__TemporalPrimaryExpression__Group_4__0)
{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getGroup_5()); }
(rule__TemporalPrimaryExpression__Group_5__0)
{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BINARYOPERATOR__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBINARYOPERATORAccess().getNorEnumLiteralDeclaration_0()); }
(	'nor' 
)
{ after(grammarAccess.getBINARYOPERATORAccess().getNorEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getBINARYOPERATORAccess().getNandEnumLiteralDeclaration_1()); }
(	'nand' 
)
{ after(grammarAccess.getBINARYOPERATORAccess().getNandEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TEMPORALOPERATOR__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTEMPORALOPERATORAccess().getEXEnumLiteralDeclaration_0()); }
(	'EX' 
)
{ after(grammarAccess.getTEMPORALOPERATORAccess().getEXEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getTEMPORALOPERATORAccess().getEGEnumLiteralDeclaration_1()); }
(	'EG' 
)
{ after(grammarAccess.getTEMPORALOPERATORAccess().getEGEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getTEMPORALOPERATORAccess().getEFEnumLiteralDeclaration_2()); }
(	'EF' 
)
{ after(grammarAccess.getTEMPORALOPERATORAccess().getEFEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getTEMPORALOPERATORAccess().getAXEnumLiteralDeclaration_3()); }
(	'AX' 
)
{ after(grammarAccess.getTEMPORALOPERATORAccess().getAXEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getTEMPORALOPERATORAccess().getAGEnumLiteralDeclaration_4()); }
(	'AG' 
)
{ after(grammarAccess.getTEMPORALOPERATORAccess().getAGEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getTEMPORALOPERATORAccess().getAFEnumLiteralDeclaration_5()); }
(	'AF' 
)
{ after(grammarAccess.getTEMPORALOPERATORAccess().getAFEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TEMPUNTILOPERATOR__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTEMPUNTILOPERATORAccess().getEEnumLiteralDeclaration_0()); }
(	'E' 
)
{ after(grammarAccess.getTEMPUNTILOPERATORAccess().getEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getTEMPUNTILOPERATORAccess().getAEnumLiteralDeclaration_1()); }
(	'A' 
)
{ after(grammarAccess.getTEMPUNTILOPERATORAccess().getAEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}





rule__SystemDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SystemDeclaration__Group__0__Impl
	rule__SystemDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemDeclarationAccess().getSystemKeyword_0()); }

	'system' 

{ after(grammarAccess.getSystemDeclarationAccess().getSystemKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SystemDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SystemDeclaration__Group__1__Impl
	rule__SystemDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemDeclarationAccess().getNameAssignment_1()); }
(rule__SystemDeclaration__NameAssignment_1)
{ after(grammarAccess.getSystemDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SystemDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SystemDeclaration__Group__2__Impl
	rule__SystemDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemDeclarationAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getSystemDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SystemDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SystemDeclaration__Group__3__Impl
	rule__SystemDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemDeclarationAccess().getDeclarationsAssignment_3()); }
(rule__SystemDeclaration__DeclarationsAssignment_3)*
{ after(grammarAccess.getSystemDeclarationAccess().getDeclarationsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SystemDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SystemDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemDeclarationAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getSystemDeclarationAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PropositionExpressionDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropositionExpressionDeclaration__Group__0__Impl
	rule__PropositionExpressionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropositionExpressionDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropositionExpressionDeclarationAccess().getPropKeyword_0()); }

	'prop' 

{ after(grammarAccess.getPropositionExpressionDeclarationAccess().getPropKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropositionExpressionDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropositionExpressionDeclaration__Group__1__Impl
	rule__PropositionExpressionDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropositionExpressionDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropositionExpressionDeclarationAccess().getArgsAssignment_1()); }
(rule__PropositionExpressionDeclaration__ArgsAssignment_1)
{ after(grammarAccess.getPropositionExpressionDeclarationAccess().getArgsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropositionExpressionDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropositionExpressionDeclaration__Group__2__Impl
	rule__PropositionExpressionDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PropositionExpressionDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropositionExpressionDeclarationAccess().getGroup_2()); }
(rule__PropositionExpressionDeclaration__Group_2__0)*
{ after(grammarAccess.getPropositionExpressionDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropositionExpressionDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropositionExpressionDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropositionExpressionDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropositionExpressionDeclarationAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getPropositionExpressionDeclarationAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PropositionExpressionDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropositionExpressionDeclaration__Group_2__0__Impl
	rule__PropositionExpressionDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropositionExpressionDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropositionExpressionDeclarationAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getPropositionExpressionDeclarationAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropositionExpressionDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropositionExpressionDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropositionExpressionDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropositionExpressionDeclarationAccess().getArgsAssignment_2_1()); }
(rule__PropositionExpressionDeclaration__ArgsAssignment_2_1)
{ after(grammarAccess.getPropositionExpressionDeclarationAccess().getArgsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SituationDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SituationDeclaration__Group__0__Impl
	rule__SituationDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SituationDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSituationDeclarationAccess().getSituationKeyword_0()); }

	'situation' 

{ after(grammarAccess.getSituationDeclarationAccess().getSituationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SituationDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SituationDeclaration__Group__1__Impl
	rule__SituationDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SituationDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSituationDeclarationAccess().getNameAssignment_1()); }
(rule__SituationDeclaration__NameAssignment_1)
{ after(grammarAccess.getSituationDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SituationDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SituationDeclaration__Group__2__Impl
	rule__SituationDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SituationDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSituationDeclarationAccess().getColonEqualsSignKeyword_2()); }

	':=' 

{ after(grammarAccess.getSituationDeclarationAccess().getColonEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SituationDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SituationDeclaration__Group__3__Impl
	rule__SituationDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SituationDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSituationDeclarationAccess().getExpressionAssignment_3()); }
(rule__SituationDeclaration__ExpressionAssignment_3)
{ after(grammarAccess.getSituationDeclarationAccess().getExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SituationDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SituationDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SituationDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSituationDeclarationAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getSituationDeclarationAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SemanticConstraintDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SemanticConstraintDeclaration__Group__0__Impl
	rule__SemanticConstraintDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticConstraintDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSemanticConstraintDeclarationAccess().getSconstraintKeyword_0()); }

	'sconstraint' 

{ after(grammarAccess.getSemanticConstraintDeclarationAccess().getSconstraintKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SemanticConstraintDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SemanticConstraintDeclaration__Group__1__Impl
	rule__SemanticConstraintDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticConstraintDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSemanticConstraintDeclarationAccess().getNameAssignment_1()); }
(rule__SemanticConstraintDeclaration__NameAssignment_1)
{ after(grammarAccess.getSemanticConstraintDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SemanticConstraintDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SemanticConstraintDeclaration__Group__2__Impl
	rule__SemanticConstraintDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticConstraintDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSemanticConstraintDeclarationAccess().getColonEqualsSignKeyword_2()); }

	':=' 

{ after(grammarAccess.getSemanticConstraintDeclarationAccess().getColonEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SemanticConstraintDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SemanticConstraintDeclaration__Group__3__Impl
	rule__SemanticConstraintDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticConstraintDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSemanticConstraintDeclarationAccess().getExpressionAssignment_3()); }
(rule__SemanticConstraintDeclaration__ExpressionAssignment_3)
{ after(grammarAccess.getSemanticConstraintDeclarationAccess().getExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SemanticConstraintDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SemanticConstraintDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticConstraintDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSemanticConstraintDeclarationAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getSemanticConstraintDeclarationAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TransitionConstraintDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionConstraintDeclaration__Group__0__Impl
	rule__TransitionConstraintDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionConstraintDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionConstraintDeclarationAccess().getTconstraintKeyword_0()); }

	'tconstraint' 

{ after(grammarAccess.getTransitionConstraintDeclarationAccess().getTconstraintKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionConstraintDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionConstraintDeclaration__Group__1__Impl
	rule__TransitionConstraintDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionConstraintDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionConstraintDeclarationAccess().getNameAssignment_1()); }
(rule__TransitionConstraintDeclaration__NameAssignment_1)
{ after(grammarAccess.getTransitionConstraintDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionConstraintDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionConstraintDeclaration__Group__2__Impl
	rule__TransitionConstraintDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionConstraintDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionConstraintDeclarationAccess().getColonEqualsSignKeyword_2()); }

	':=' 

{ after(grammarAccess.getTransitionConstraintDeclarationAccess().getColonEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionConstraintDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionConstraintDeclaration__Group__3__Impl
	rule__TransitionConstraintDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionConstraintDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionConstraintDeclarationAccess().getPreKeyword_3()); }

	'pre' 

{ after(grammarAccess.getTransitionConstraintDeclarationAccess().getPreKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionConstraintDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionConstraintDeclaration__Group__4__Impl
	rule__TransitionConstraintDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionConstraintDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionConstraintDeclarationAccess().getLeftAssignment_4()); }
(rule__TransitionConstraintDeclaration__LeftAssignment_4)
{ after(grammarAccess.getTransitionConstraintDeclarationAccess().getLeftAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionConstraintDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionConstraintDeclaration__Group__5__Impl
	rule__TransitionConstraintDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionConstraintDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionConstraintDeclarationAccess().getPostKeyword_5()); }

	'post' 

{ after(grammarAccess.getTransitionConstraintDeclarationAccess().getPostKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionConstraintDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionConstraintDeclaration__Group__6__Impl
	rule__TransitionConstraintDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionConstraintDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionConstraintDeclarationAccess().getRightAssignment_6()); }
(rule__TransitionConstraintDeclaration__RightAssignment_6)
{ after(grammarAccess.getTransitionConstraintDeclarationAccess().getRightAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionConstraintDeclaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionConstraintDeclaration__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionConstraintDeclaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionConstraintDeclarationAccess().getSemicolonKeyword_7()); }

	';' 

{ after(grammarAccess.getTransitionConstraintDeclarationAccess().getSemicolonKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__ExceptionDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExceptionDeclaration__Group__0__Impl
	rule__ExceptionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExceptionDeclarationAccess().getExceptionKeyword_0()); }

	'exception' 

{ after(grammarAccess.getExceptionDeclarationAccess().getExceptionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExceptionDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExceptionDeclaration__Group__1__Impl
	rule__ExceptionDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExceptionDeclarationAccess().getNameAssignment_1()); }
(rule__ExceptionDeclaration__NameAssignment_1)
{ after(grammarAccess.getExceptionDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExceptionDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExceptionDeclaration__Group__2__Impl
	rule__ExceptionDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExceptionDeclarationAccess().getColonEqualsSignKeyword_2()); }

	':=' 

{ after(grammarAccess.getExceptionDeclarationAccess().getColonEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExceptionDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExceptionDeclaration__Group__3__Impl
	rule__ExceptionDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExceptionDeclarationAccess().getExpressionAssignment_3()); }
(rule__ExceptionDeclaration__ExpressionAssignment_3)
{ after(grammarAccess.getExceptionDeclarationAccess().getExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExceptionDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExceptionDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExceptionDeclarationAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getExceptionDeclarationAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ScopeDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopeDeclaration__Group__0__Impl
	rule__ScopeDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeDeclarationAccess().getScopeKeyword_0()); }

	'scope' 

{ after(grammarAccess.getScopeDeclarationAccess().getScopeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopeDeclaration__Group__1__Impl
	rule__ScopeDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeDeclarationAccess().getNameAssignment_1()); }
(rule__ScopeDeclaration__NameAssignment_1)
{ after(grammarAccess.getScopeDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopeDeclaration__Group__2__Impl
	rule__ScopeDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeDeclarationAccess().getHandleKeyword_2()); }

	'handle' 

{ after(grammarAccess.getScopeDeclarationAccess().getHandleKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopeDeclaration__Group__3__Impl
	rule__ScopeDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeDeclarationAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getScopeDeclarationAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopeDeclaration__Group__4__Impl
	rule__ScopeDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeDeclarationAccess().getExceptionAssignment_4()); }
(rule__ScopeDeclaration__ExceptionAssignment_4)
{ after(grammarAccess.getScopeDeclarationAccess().getExceptionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopeDeclaration__Group__5__Impl
	rule__ScopeDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeDeclarationAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getScopeDeclarationAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopeDeclaration__Group__6__Impl
	rule__ScopeDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeDeclarationAccess().getLeftCurlyBracketKeyword_6()); }

	'{' 

{ after(grammarAccess.getScopeDeclarationAccess().getLeftCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeDeclaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopeDeclaration__Group__7__Impl
	rule__ScopeDeclaration__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDeclaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getScopeDeclarationAccess().getHandlersAssignment_7()); }
(rule__ScopeDeclaration__HandlersAssignment_7)
{ after(grammarAccess.getScopeDeclarationAccess().getHandlersAssignment_7()); }
)
(
{ before(grammarAccess.getScopeDeclarationAccess().getHandlersAssignment_7()); }
(rule__ScopeDeclaration__HandlersAssignment_7)*
{ after(grammarAccess.getScopeDeclarationAccess().getHandlersAssignment_7()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeDeclaration__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopeDeclaration__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDeclaration__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeDeclarationAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getScopeDeclarationAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__HandlerDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HandlerDeclaration__Group__0__Impl
	rule__HandlerDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HandlerDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHandlerDeclarationAccess().getCaseKeyword_0()); }

	'case' 

{ after(grammarAccess.getHandlerDeclarationAccess().getCaseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HandlerDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HandlerDeclaration__Group__1__Impl
	rule__HandlerDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HandlerDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHandlerDeclarationAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getHandlerDeclarationAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HandlerDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HandlerDeclaration__Group__2__Impl
	rule__HandlerDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HandlerDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHandlerDeclarationAccess().getExpressionAssignment_2()); }
(rule__HandlerDeclaration__ExpressionAssignment_2)
{ after(grammarAccess.getHandlerDeclarationAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HandlerDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HandlerDeclaration__Group__3__Impl
	rule__HandlerDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__HandlerDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHandlerDeclarationAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getHandlerDeclarationAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HandlerDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HandlerDeclaration__Group__4__Impl
	rule__HandlerDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__HandlerDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHandlerDeclarationAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getHandlerDeclarationAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HandlerDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HandlerDeclaration__Group__5__Impl
	rule__HandlerDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__HandlerDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getHandlerDeclarationAccess().getActionsAssignment_5()); }
(rule__HandlerDeclaration__ActionsAssignment_5)
{ after(grammarAccess.getHandlerDeclarationAccess().getActionsAssignment_5()); }
)
(
{ before(grammarAccess.getHandlerDeclarationAccess().getActionsAssignment_5()); }
(rule__HandlerDeclaration__ActionsAssignment_5)*
{ after(grammarAccess.getHandlerDeclarationAccess().getActionsAssignment_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HandlerDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HandlerDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HandlerDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHandlerDeclarationAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getHandlerDeclarationAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ActionDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionDeclaration__Group__0__Impl
	rule__ActionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionDeclarationAccess().getDoKeyword_0()); }

	'do' 

{ after(grammarAccess.getActionDeclarationAccess().getDoKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionDeclaration__Group__1__Impl
	rule__ActionDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionDeclarationAccess().getExpressionAssignment_1()); }
(rule__ActionDeclaration__ExpressionAssignment_1)
{ after(grammarAccess.getActionDeclarationAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionDeclarationAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getActionDeclarationAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PropertyDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group__0__Impl
	rule__PropertyDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getSpecKeyword_0()); }

	'spec' 

{ after(grammarAccess.getPropertyDeclarationAccess().getSpecKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group__1__Impl
	rule__PropertyDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getNameAssignment_1()); }
(rule__PropertyDeclaration__NameAssignment_1)
{ after(grammarAccess.getPropertyDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group__2__Impl
	rule__PropertyDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getColonEqualsSignKeyword_2()); }

	':=' 

{ after(grammarAccess.getPropertyDeclarationAccess().getColonEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group__3__Impl
	rule__PropertyDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getExpressionAssignment_3()); }
(rule__PropertyDeclaration__ExpressionAssignment_3)
{ after(grammarAccess.getPropertyDeclarationAccess().getExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getPropertyDeclarationAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__OrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group__0__Impl
	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
{ after(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup_1()); }
(rule__OrExpression__Group_1__0)*
{ after(grammarAccess.getOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__0__Impl
	rule__OrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getOrOpExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getOrExpressionAccess().getOrOpExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__1__Impl
	rule__OrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getOpAssignment_1_1()); }
(rule__OrExpression__OpAssignment_1_1)
{ after(grammarAccess.getOrExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2()); }
(rule__OrExpression__RightAssignment_1_2)
{ after(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
	ruleRelationalExpression
{ after(grammarAccess.getAndExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
(rule__AndExpression__Group_1__0)*
{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getAndOpExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAndExpressionAccess().getAndOpExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__1__Impl
	rule__AndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOpAssignment_1_1()); }
(rule__AndExpression__OpAssignment_1_1)
{ after(grammarAccess.getAndExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
(rule__AndExpression__RightAssignment_1_2)
{ after(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RelationalExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group__0__Impl
	rule__RelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
	ruleAdditiveExpression
{ after(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
(rule__RelationalExpression__Group_1__0)*
{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1__0__Impl
	rule__RelationalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getRelationalOpExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getRelationalExpressionAccess().getRelationalOpExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1__1__Impl
	rule__RelationalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOpAssignment_1_1()); }
(rule__RelationalExpression__OpAssignment_1_1)
{ after(grammarAccess.getRelationalExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_2()); }
(rule__RelationalExpression__RightAssignment_1_2)
{ after(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AdditiveExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_0__0__Impl
	rule__AdditiveExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getUnaryOpExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getAdditiveExpressionAccess().getUnaryOpExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_0__1__Impl
	rule__AdditiveExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getOpAssignment_0_1()); }
(rule__AdditiveExpression__OpAssignment_0_1)
{ after(grammarAccess.getAdditiveExpressionAccess().getOpAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getExprAssignment_0_2()); }
(rule__AdditiveExpression__ExprAssignment_0_2)
{ after(grammarAccess.getAdditiveExpressionAccess().getExprAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0__0__Impl
	rule__PrimaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0__1__Impl
	rule__PrimaryExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExprAssignment_0_1()); }
(rule__PrimaryExpression__ExprAssignment_0_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getExprAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2__0__Impl
	rule__PrimaryExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getOpBinAssignment_2_0()); }
(rule__PrimaryExpression__OpBinAssignment_2_0)
{ after(grammarAccess.getPrimaryExpressionAccess().getOpBinAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2__1__Impl
	rule__PrimaryExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_2_1()); }

	'(' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2__2__Impl
	rule__PrimaryExpression__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftAssignment_2_2()); }
(rule__PrimaryExpression__LeftAssignment_2_2)
{ after(grammarAccess.getPrimaryExpressionAccess().getLeftAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2__3__Impl
	rule__PrimaryExpression__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_2_3()); }

	',' 

{ after(grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2__4__Impl
	rule__PrimaryExpression__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightAssignment_2_4()); }
(rule__PrimaryExpression__RightAssignment_2_4)
{ after(grammarAccess.getPrimaryExpressionAccess().getRightAssignment_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_2_5()); }

	')' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__PrimaryExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__0__Impl
	rule__PrimaryExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getOpMulAssignment_3_0()); }
(rule__PrimaryExpression__OpMulAssignment_3_0)
{ after(grammarAccess.getPrimaryExpressionAccess().getOpMulAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__1__Impl
	rule__PrimaryExpression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_3_1()); }

	'(' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__2__Impl
	rule__PrimaryExpression__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getArgsAssignment_3_2()); }
(rule__PrimaryExpression__ArgsAssignment_3_2)
{ after(grammarAccess.getPrimaryExpressionAccess().getArgsAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__3__Impl
	rule__PrimaryExpression__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_3_3()); }
(rule__PrimaryExpression__Group_3_3__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_3_3()); }
)
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_3_3()); }
(rule__PrimaryExpression__Group_3_3__0)*
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_3_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_3_4()); }

	')' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PrimaryExpression__Group_3_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3_3__0__Impl
	rule__PrimaryExpression__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_3_3_0()); }

	',' 

{ after(grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getArgsAssignment_3_3_1()); }
(rule__PrimaryExpression__ArgsAssignment_3_3_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getArgsAssignment_3_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TemporalOrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalOrExpression__Group__0__Impl
	rule__TemporalOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalOrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalOrExpressionAccess().getTemporalAndExpressionParserRuleCall_0()); }
	ruleTemporalAndExpression
{ after(grammarAccess.getTemporalOrExpressionAccess().getTemporalAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalOrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalOrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalOrExpressionAccess().getGroup_1()); }
(rule__TemporalOrExpression__Group_1__0)*
{ after(grammarAccess.getTemporalOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TemporalOrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalOrExpression__Group_1__0__Impl
	rule__TemporalOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalOrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalOrExpressionAccess().getOrOpExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getTemporalOrExpressionAccess().getOrOpExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalOrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalOrExpression__Group_1__1__Impl
	rule__TemporalOrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalOrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalOrExpressionAccess().getOpAssignment_1_1()); }
(rule__TemporalOrExpression__OpAssignment_1_1)
{ after(grammarAccess.getTemporalOrExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalOrExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalOrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalOrExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalOrExpressionAccess().getRightAssignment_1_2()); }
(rule__TemporalOrExpression__RightAssignment_1_2)
{ after(grammarAccess.getTemporalOrExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TemporalAndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalAndExpression__Group__0__Impl
	rule__TemporalAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalAndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalAndExpressionAccess().getTemporalRelationalExpressionParserRuleCall_0()); }
	ruleTemporalRelationalExpression
{ after(grammarAccess.getTemporalAndExpressionAccess().getTemporalRelationalExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalAndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalAndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalAndExpressionAccess().getGroup_1()); }
(rule__TemporalAndExpression__Group_1__0)*
{ after(grammarAccess.getTemporalAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TemporalAndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalAndExpression__Group_1__0__Impl
	rule__TemporalAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalAndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalAndExpressionAccess().getAndOpExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getTemporalAndExpressionAccess().getAndOpExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalAndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalAndExpression__Group_1__1__Impl
	rule__TemporalAndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalAndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalAndExpressionAccess().getOpAssignment_1_1()); }
(rule__TemporalAndExpression__OpAssignment_1_1)
{ after(grammarAccess.getTemporalAndExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalAndExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalAndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalAndExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalAndExpressionAccess().getRightAssignment_1_2()); }
(rule__TemporalAndExpression__RightAssignment_1_2)
{ after(grammarAccess.getTemporalAndExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TemporalRelationalExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalRelationalExpression__Group__0__Impl
	rule__TemporalRelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalRelationalExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalRelationalExpressionAccess().getTemporalAdditiveExpressionParserRuleCall_0()); }
	ruleTemporalAdditiveExpression
{ after(grammarAccess.getTemporalRelationalExpressionAccess().getTemporalAdditiveExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalRelationalExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalRelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalRelationalExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalRelationalExpressionAccess().getGroup_1()); }
(rule__TemporalRelationalExpression__Group_1__0)*
{ after(grammarAccess.getTemporalRelationalExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TemporalRelationalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalRelationalExpression__Group_1__0__Impl
	rule__TemporalRelationalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalRelationalExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalRelationalExpressionAccess().getRelationalOpExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getTemporalRelationalExpressionAccess().getRelationalOpExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalRelationalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalRelationalExpression__Group_1__1__Impl
	rule__TemporalRelationalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalRelationalExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalRelationalExpressionAccess().getOpAssignment_1_1()); }
(rule__TemporalRelationalExpression__OpAssignment_1_1)
{ after(grammarAccess.getTemporalRelationalExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalRelationalExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalRelationalExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalRelationalExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalRelationalExpressionAccess().getRightAssignment_1_2()); }
(rule__TemporalRelationalExpression__RightAssignment_1_2)
{ after(grammarAccess.getTemporalRelationalExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TemporalAdditiveExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalAdditiveExpression__Group_0__0__Impl
	rule__TemporalAdditiveExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalAdditiveExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalAdditiveExpressionAccess().getUnaryOpExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getTemporalAdditiveExpressionAccess().getUnaryOpExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalAdditiveExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalAdditiveExpression__Group_0__1__Impl
	rule__TemporalAdditiveExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalAdditiveExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalAdditiveExpressionAccess().getOpAssignment_0_1()); }
(rule__TemporalAdditiveExpression__OpAssignment_0_1)
{ after(grammarAccess.getTemporalAdditiveExpressionAccess().getOpAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalAdditiveExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalAdditiveExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalAdditiveExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalAdditiveExpressionAccess().getExprAssignment_0_2()); }
(rule__TemporalAdditiveExpression__ExprAssignment_0_2)
{ after(grammarAccess.getTemporalAdditiveExpressionAccess().getExprAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TemporalPrimaryExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalPrimaryExpression__Group_0__0__Impl
	rule__TemporalPrimaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalPrimaryExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalPrimaryExpression__Group_0__1__Impl
	rule__TemporalPrimaryExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getExprAssignment_0_1()); }
(rule__TemporalPrimaryExpression__ExprAssignment_0_1)
{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getExprAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalPrimaryExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalPrimaryExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TemporalPrimaryExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalPrimaryExpression__Group_2__0__Impl
	rule__TemporalPrimaryExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getOpTempAssignment_2_0()); }
(rule__TemporalPrimaryExpression__OpTempAssignment_2_0)
{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getOpTempAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalPrimaryExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalPrimaryExpression__Group_2__1__Impl
	rule__TemporalPrimaryExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getLeftParenthesisKeyword_2_1()); }

	'(' 

{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getLeftParenthesisKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalPrimaryExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalPrimaryExpression__Group_2__2__Impl
	rule__TemporalPrimaryExpression__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getTemporalAssignment_2_2()); }
(rule__TemporalPrimaryExpression__TemporalAssignment_2_2)
{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getTemporalAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalPrimaryExpression__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalPrimaryExpression__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TemporalPrimaryExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalPrimaryExpression__Group_3__0__Impl
	rule__TemporalPrimaryExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getOpTempUntilAssignment_3_0()); }
(rule__TemporalPrimaryExpression__OpTempUntilAssignment_3_0)
{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getOpTempUntilAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalPrimaryExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalPrimaryExpression__Group_3__1__Impl
	rule__TemporalPrimaryExpression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getLeftParenthesisKeyword_3_1()); }

	'(' 

{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getLeftParenthesisKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalPrimaryExpression__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalPrimaryExpression__Group_3__2__Impl
	rule__TemporalPrimaryExpression__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getLeftExpAssignment_3_2()); }
(rule__TemporalPrimaryExpression__LeftExpAssignment_3_2)
{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getLeftExpAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalPrimaryExpression__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalPrimaryExpression__Group_3__3__Impl
	rule__TemporalPrimaryExpression__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getUKeyword_3_3()); }

	'U' 

{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getUKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalPrimaryExpression__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalPrimaryExpression__Group_3__4__Impl
	rule__TemporalPrimaryExpression__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getRightExpAssignment_3_4()); }
(rule__TemporalPrimaryExpression__RightExpAssignment_3_4)
{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getRightExpAssignment_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalPrimaryExpression__Group_3__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalPrimaryExpression__Group_3__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__Group_3__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getRightParenthesisKeyword_3_5()); }

	')' 

{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getRightParenthesisKeyword_3_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__TemporalPrimaryExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalPrimaryExpression__Group_4__0__Impl
	rule__TemporalPrimaryExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getOpBinAssignment_4_0()); }
(rule__TemporalPrimaryExpression__OpBinAssignment_4_0)
{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getOpBinAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalPrimaryExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalPrimaryExpression__Group_4__1__Impl
	rule__TemporalPrimaryExpression__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getLeftParenthesisKeyword_4_1()); }

	'(' 

{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getLeftParenthesisKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalPrimaryExpression__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalPrimaryExpression__Group_4__2__Impl
	rule__TemporalPrimaryExpression__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getLeftAssignment_4_2()); }
(rule__TemporalPrimaryExpression__LeftAssignment_4_2)
{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getLeftAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalPrimaryExpression__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalPrimaryExpression__Group_4__3__Impl
	rule__TemporalPrimaryExpression__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getCommaKeyword_4_3()); }

	',' 

{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getCommaKeyword_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalPrimaryExpression__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalPrimaryExpression__Group_4__4__Impl
	rule__TemporalPrimaryExpression__Group_4__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getRightAssignment_4_4()); }
(rule__TemporalPrimaryExpression__RightAssignment_4_4)
{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getRightAssignment_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalPrimaryExpression__Group_4__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalPrimaryExpression__Group_4__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__Group_4__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getRightParenthesisKeyword_4_5()); }

	')' 

{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getRightParenthesisKeyword_4_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__TemporalPrimaryExpression__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalPrimaryExpression__Group_5__0__Impl
	rule__TemporalPrimaryExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getOpMulAssignment_5_0()); }
(rule__TemporalPrimaryExpression__OpMulAssignment_5_0)
{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getOpMulAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalPrimaryExpression__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalPrimaryExpression__Group_5__1__Impl
	rule__TemporalPrimaryExpression__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getLeftParenthesisKeyword_5_1()); }

	'(' 

{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getLeftParenthesisKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalPrimaryExpression__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalPrimaryExpression__Group_5__2__Impl
	rule__TemporalPrimaryExpression__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getArgsAssignment_5_2()); }
(rule__TemporalPrimaryExpression__ArgsAssignment_5_2)
{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getArgsAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalPrimaryExpression__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalPrimaryExpression__Group_5__3__Impl
	rule__TemporalPrimaryExpression__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getGroup_5_3()); }
(rule__TemporalPrimaryExpression__Group_5_3__0)
{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getGroup_5_3()); }
)
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getGroup_5_3()); }
(rule__TemporalPrimaryExpression__Group_5_3__0)*
{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getGroup_5_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalPrimaryExpression__Group_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalPrimaryExpression__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__Group_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getRightParenthesisKeyword_5_4()); }

	')' 

{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getRightParenthesisKeyword_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TemporalPrimaryExpression__Group_5_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalPrimaryExpression__Group_5_3__0__Impl
	rule__TemporalPrimaryExpression__Group_5_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__Group_5_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getCommaKeyword_5_3_0()); }

	',' 

{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getCommaKeyword_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalPrimaryExpression__Group_5_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemporalPrimaryExpression__Group_5_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__Group_5_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getArgsAssignment_5_3_1()); }
(rule__TemporalPrimaryExpression__ArgsAssignment_5_3_1)
{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getArgsAssignment_5_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Domainmodel__ElementsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainmodelAccess().getElementsAbstractElementParserRuleCall_0()); }
	ruleAbstractElement{ after(grammarAccess.getDomainmodelAccess().getElementsAbstractElementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSystemDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDeclaration__DeclarationsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemDeclarationAccess().getDeclarationsDeclarationParserRuleCall_3_0()); }
	ruleDeclaration{ after(grammarAccess.getSystemDeclarationAccess().getDeclarationsDeclarationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropositionExpressionDeclaration__ArgsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropositionExpressionDeclarationAccess().getArgsPropositionDeclarationParserRuleCall_1_0()); }
	rulePropositionDeclaration{ after(grammarAccess.getPropositionExpressionDeclarationAccess().getArgsPropositionDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropositionExpressionDeclaration__ArgsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropositionExpressionDeclarationAccess().getArgsPropositionDeclarationParserRuleCall_2_1_0()); }
	rulePropositionDeclaration{ after(grammarAccess.getPropositionExpressionDeclarationAccess().getArgsPropositionDeclarationParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropositionDeclaration__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropositionDeclarationAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getPropositionDeclarationAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SituationDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSituationDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSituationDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SituationDeclaration__ExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSituationDeclarationAccess().getExpressionLogicExpressionParserRuleCall_3_0()); }
	ruleLogicExpression{ after(grammarAccess.getSituationDeclarationAccess().getExpressionLogicExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticConstraintDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSemanticConstraintDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSemanticConstraintDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticConstraintDeclaration__ExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSemanticConstraintDeclarationAccess().getExpressionLogicExpressionParserRuleCall_3_0()); }
	ruleLogicExpression{ after(grammarAccess.getSemanticConstraintDeclarationAccess().getExpressionLogicExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionConstraintDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionConstraintDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTransitionConstraintDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionConstraintDeclaration__LeftAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionConstraintDeclarationAccess().getLeftLogicExpressionParserRuleCall_4_0()); }
	ruleLogicExpression{ after(grammarAccess.getTransitionConstraintDeclarationAccess().getLeftLogicExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionConstraintDeclaration__RightAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionConstraintDeclarationAccess().getRightLogicExpressionParserRuleCall_6_0()); }
	ruleLogicExpression{ after(grammarAccess.getTransitionConstraintDeclarationAccess().getRightLogicExpressionParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExceptionDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getExceptionDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDeclaration__ExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExceptionDeclarationAccess().getExpressionLogicExpressionParserRuleCall_3_0()); }
	ruleLogicExpression{ after(grammarAccess.getExceptionDeclarationAccess().getExpressionLogicExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getScopeDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDeclaration__ExceptionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeDeclarationAccess().getExceptionExceptionDeclarationCrossReference_4_0()); }
(
{ before(grammarAccess.getScopeDeclarationAccess().getExceptionExceptionDeclarationIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getScopeDeclarationAccess().getExceptionExceptionDeclarationIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getScopeDeclarationAccess().getExceptionExceptionDeclarationCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDeclaration__HandlersAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeDeclarationAccess().getHandlersHandlerDeclarationParserRuleCall_7_0()); }
	ruleHandlerDeclaration{ after(grammarAccess.getScopeDeclarationAccess().getHandlersHandlerDeclarationParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HandlerDeclaration__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHandlerDeclarationAccess().getExpressionLogicExpressionParserRuleCall_2_0()); }
	ruleLogicExpression{ after(grammarAccess.getHandlerDeclarationAccess().getExpressionLogicExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HandlerDeclaration__ActionsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHandlerDeclarationAccess().getActionsActionDeclarationParserRuleCall_5_0()); }
	ruleActionDeclaration{ after(grammarAccess.getHandlerDeclarationAccess().getActionsActionDeclarationParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionDeclarationAccess().getExpressionLogicExpressionParserRuleCall_1_0()); }
	ruleLogicExpression{ after(grammarAccess.getActionDeclarationAccess().getExpressionLogicExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getPropertyDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__ExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getExpressionTemporalLogicExpressionParserRuleCall_3_0()); }
	ruleTemporalLogicExpression{ after(grammarAccess.getPropertyDeclarationAccess().getExpressionTemporalLogicExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); }
(
{ before(grammarAccess.getOrExpressionAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); }

	'||' 

{ after(grammarAccess.getOrExpressionAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); }
)

{ after(grammarAccess.getOrExpressionAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
	ruleAndExpression{ after(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOpAmpersandAmpersandKeyword_1_1_0()); }
(
{ before(grammarAccess.getAndExpressionAccess().getOpAmpersandAmpersandKeyword_1_1_0()); }

	'&&' 

{ after(grammarAccess.getAndExpressionAccess().getOpAmpersandAmpersandKeyword_1_1_0()); }
)

{ after(grammarAccess.getAndExpressionAccess().getOpAmpersandAmpersandKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0()); }
	ruleRelationalExpression{ after(grammarAccess.getAndExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOpAlternatives_1_1_0()); }
(rule__RelationalExpression__OpAlternatives_1_1_0)
{ after(grammarAccess.getRelationalExpressionAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_2_0()); }
	ruleAdditiveExpression{ after(grammarAccess.getRelationalExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__OpAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getOpExclamationMarkKeyword_0_1_0()); }
(
{ before(grammarAccess.getAdditiveExpressionAccess().getOpExclamationMarkKeyword_0_1_0()); }

	'!' 

{ after(grammarAccess.getAdditiveExpressionAccess().getOpExclamationMarkKeyword_0_1_0()); }
)

{ after(grammarAccess.getAdditiveExpressionAccess().getOpExclamationMarkKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__ExprAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getExprPrimaryExpressionParserRuleCall_0_2_0()); }
	rulePrimaryExpression{ after(grammarAccess.getAdditiveExpressionAccess().getExprPrimaryExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ExprAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExprLogicExpressionParserRuleCall_0_1_0()); }
	ruleLogicExpression{ after(grammarAccess.getPrimaryExpressionAccess().getExprLogicExpressionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getValueAbstractDeclarationCrossReference_1_0()); }
(
{ before(grammarAccess.getPrimaryExpressionAccess().getValueAbstractDeclarationIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getPrimaryExpressionAccess().getValueAbstractDeclarationIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getPrimaryExpressionAccess().getValueAbstractDeclarationCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__OpBinAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getOpBinBINARYOPERATOREnumRuleCall_2_0_0()); }
	ruleBINARYOPERATOR{ after(grammarAccess.getPrimaryExpressionAccess().getOpBinBINARYOPERATOREnumRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__LeftAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftLogicExpressionParserRuleCall_2_2_0()); }
	ruleLogicExpression{ after(grammarAccess.getPrimaryExpressionAccess().getLeftLogicExpressionParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__RightAssignment_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightLogicExpressionParserRuleCall_2_4_0()); }
	ruleLogicExpression{ after(grammarAccess.getPrimaryExpressionAccess().getRightLogicExpressionParserRuleCall_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__OpMulAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getOpMulMULTIPLEOPERATOREnumRuleCall_3_0_0()); }
	ruleMULTIPLEOPERATOR{ after(grammarAccess.getPrimaryExpressionAccess().getOpMulMULTIPLEOPERATOREnumRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ArgsAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getArgsLogicExpressionParserRuleCall_3_2_0()); }
	ruleLogicExpression{ after(grammarAccess.getPrimaryExpressionAccess().getArgsLogicExpressionParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ArgsAssignment_3_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getArgsLogicExpressionParserRuleCall_3_3_1_0()); }
	ruleLogicExpression{ after(grammarAccess.getPrimaryExpressionAccess().getArgsLogicExpressionParserRuleCall_3_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalOrExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalOrExpressionAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); }
(
{ before(grammarAccess.getTemporalOrExpressionAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); }

	'||' 

{ after(grammarAccess.getTemporalOrExpressionAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); }
)

{ after(grammarAccess.getTemporalOrExpressionAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalOrExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalOrExpressionAccess().getRightTemporalAndExpressionParserRuleCall_1_2_0()); }
	ruleTemporalAndExpression{ after(grammarAccess.getTemporalOrExpressionAccess().getRightTemporalAndExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalAndExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalAndExpressionAccess().getOpAmpersandAmpersandKeyword_1_1_0()); }
(
{ before(grammarAccess.getTemporalAndExpressionAccess().getOpAmpersandAmpersandKeyword_1_1_0()); }

	'&&' 

{ after(grammarAccess.getTemporalAndExpressionAccess().getOpAmpersandAmpersandKeyword_1_1_0()); }
)

{ after(grammarAccess.getTemporalAndExpressionAccess().getOpAmpersandAmpersandKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalAndExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalAndExpressionAccess().getRightTemporalRelationalExpressionParserRuleCall_1_2_0()); }
	ruleTemporalRelationalExpression{ after(grammarAccess.getTemporalAndExpressionAccess().getRightTemporalRelationalExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalRelationalExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalRelationalExpressionAccess().getOpAlternatives_1_1_0()); }
(rule__TemporalRelationalExpression__OpAlternatives_1_1_0)
{ after(grammarAccess.getTemporalRelationalExpressionAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalRelationalExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalRelationalExpressionAccess().getRightTemporalAdditiveExpressionParserRuleCall_1_2_0()); }
	ruleTemporalAdditiveExpression{ after(grammarAccess.getTemporalRelationalExpressionAccess().getRightTemporalAdditiveExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalAdditiveExpression__OpAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalAdditiveExpressionAccess().getOpExclamationMarkKeyword_0_1_0()); }
(
{ before(grammarAccess.getTemporalAdditiveExpressionAccess().getOpExclamationMarkKeyword_0_1_0()); }

	'!' 

{ after(grammarAccess.getTemporalAdditiveExpressionAccess().getOpExclamationMarkKeyword_0_1_0()); }
)

{ after(grammarAccess.getTemporalAdditiveExpressionAccess().getOpExclamationMarkKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalAdditiveExpression__ExprAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalAdditiveExpressionAccess().getExprTemporalPrimaryExpressionParserRuleCall_0_2_0()); }
	ruleTemporalPrimaryExpression{ after(grammarAccess.getTemporalAdditiveExpressionAccess().getExprTemporalPrimaryExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__ExprAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getExprTemporalLogicExpressionParserRuleCall_0_1_0()); }
	ruleTemporalLogicExpression{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getExprTemporalLogicExpressionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getValueAbstractDeclarationCrossReference_1_0()); }
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getValueAbstractDeclarationIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getValueAbstractDeclarationIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getValueAbstractDeclarationCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__OpTempAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getOpTempTEMPORALOPERATOREnumRuleCall_2_0_0()); }
	ruleTEMPORALOPERATOR{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getOpTempTEMPORALOPERATOREnumRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__TemporalAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getTemporalTemporalLogicExpressionParserRuleCall_2_2_0()); }
	ruleTemporalLogicExpression{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getTemporalTemporalLogicExpressionParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__OpTempUntilAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getOpTempUntilTEMPUNTILOPERATOREnumRuleCall_3_0_0()); }
	ruleTEMPUNTILOPERATOR{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getOpTempUntilTEMPUNTILOPERATOREnumRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__LeftExpAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getLeftExpTemporalLogicExpressionParserRuleCall_3_2_0()); }
	ruleTemporalLogicExpression{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getLeftExpTemporalLogicExpressionParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__RightExpAssignment_3_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getRightExpTemporalLogicExpressionParserRuleCall_3_4_0()); }
	ruleTemporalLogicExpression{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getRightExpTemporalLogicExpressionParserRuleCall_3_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__OpBinAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getOpBinBINARYOPERATOREnumRuleCall_4_0_0()); }
	ruleBINARYOPERATOR{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getOpBinBINARYOPERATOREnumRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__LeftAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getLeftLogicExpressionParserRuleCall_4_2_0()); }
	ruleLogicExpression{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getLeftLogicExpressionParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__RightAssignment_4_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getRightLogicExpressionParserRuleCall_4_4_0()); }
	ruleLogicExpression{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getRightLogicExpressionParserRuleCall_4_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__OpMulAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getOpMulMULTIPLEOPERATOREnumRuleCall_5_0_0()); }
	ruleMULTIPLEOPERATOR{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getOpMulMULTIPLEOPERATOREnumRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__ArgsAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getArgsLogicExpressionParserRuleCall_5_2_0()); }
	ruleLogicExpression{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getArgsLogicExpressionParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPrimaryExpression__ArgsAssignment_5_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPrimaryExpressionAccess().getArgsLogicExpressionParserRuleCall_5_3_1_0()); }
	ruleLogicExpression{ after(grammarAccess.getTemporalPrimaryExpressionAccess().getArgsLogicExpressionParserRuleCall_5_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


