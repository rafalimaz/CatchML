/*
* generated by Xtext
*/
package org.xtext.example.mydsl.ui.labeling;

import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;
import org.xtext.example.mydsl.myDsl.ExceptionType;
import org.xtext.example.mydsl.myDsl.PropertyType;
import org.xtext.example.mydsl.myDsl.PropositionList;
import org.xtext.example.mydsl.myDsl.PropositionSingle;
import org.xtext.example.mydsl.myDsl.ScopeType;
import org.xtext.example.mydsl.myDsl.SemanticConstraintType;
import org.xtext.example.mydsl.myDsl.SituationType;
import org.xtext.example.mydsl.myDsl.TransitionConstraintType;

import com.google.inject.Inject;

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#labelProvider
 */
public class MyDslLabelProvider extends DefaultEObjectLabelProvider {

	@Inject
	public MyDslLabelProvider(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	String text(PropositionSingle ele) {
	  return "propositions";
	}
	
	String text(PropositionList ele) {
		  return "propositions";
	}
	
	String text(SituationType ele) {
		  return "situations";
	}
	
	String text(SemanticConstraintType ele) {
		  return "scontraints";
	}
	
	String text(TransitionConstraintType ele) {
		  return "tcontraints";
	}
	
	String text(ExceptionType ele) {
		  return "exceptions";
	}
	
	String text(ScopeType ele) {
		  return "scopes";
	}
	
	String text(PropertyType ele) {
		  return "specs";
	}
		
	/*
    String image(MyModel ele) {
      return "MyModel.gif";
    }*/
}
